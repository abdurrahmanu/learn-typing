/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const EffectScope: typeof import('vue')['EffectScope']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const addSingleDoc: typeof import('./src/composables/firestoreDocs.js')['addSingleDoc']
  const app: typeof import('./src/firebase.js')['app']
  const auth: typeof import('./src/firebase.js')['auth']
  const authStore: typeof import('./src/stores/authStore.js')['authStore']
  const characterStore: typeof import('./src/stores/characterStore.js')['characterStore']
  const computed: typeof import('vue')['computed']
  const connectStore: typeof import('./src/stores/connectStore.js')['connectStore']
  const countdownStore: typeof import('./src/stores/countdownStore.js')['countdownStore']
  const createApp: typeof import('vue')['createApp']
  const createPinia: typeof import('pinia')['createPinia']
  const createUser: typeof import('./src/composables/createUser.js')['createUser']
  const customRef: typeof import('vue')['customRef']
  const customizeTest: typeof import('./src/composables/customizeTest.js')['customizeTest']
  const db: typeof import('./src/firebase.js')['db']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const deleteSingleDoc: typeof import('./src/composables/firestoreDocs.js')['deleteSingleDoc']
  const effectScope: typeof import('vue')['effectScope']
  const evaluateInput: typeof import('./src/composables/evaluateInput.js')['default']
  const focusInputElement: typeof import('./src/composables/focusInputElement.js')['default']
  const generateTest: typeof import('./src/composables/generateTest.js')['generateTest']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getCurrentWatcher: typeof import('vue')['getCurrentWatcher']
  const getSingleDoc: typeof import('./src/composables/firestoreDocs.js')['getSingleDoc']
  const getTest: typeof import('./src/composables/getTest.js')['getTest']
  const getUser: typeof import('./src/composables/getUser.js')['getUser']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const inputEvent: typeof import('./src/composables/inputEvent.js')['default']
  const isMobile: typeof import('./src/composables/isMobile.js')['isMobile']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isShallow: typeof import('vue')['isShallow']
  const isTouchScreenDevice: typeof import('./src/composables/isTouchScreenDevice.js')['isTouchScreenDevice']
  const mainStore: typeof import('./src/stores/mainStore.js')['mainStore']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const nextStore: typeof import('./src/stores/nextStore.js')['nextStore']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const provide: typeof import('vue')['provide']
  const provider: typeof import('./src/firebase.js')['provider']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const redirect: typeof import('./src/composables/redirect.js')['default']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const resultStore: typeof import('./src/stores/resultStore.js')['resultStore']
  const searchStore: typeof import('./src/stores/searchStore.js')['searchStore']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const settingsStore: typeof import('./src/stores/settingsStore.js')['settingsStore']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const themeStore: typeof import('./src/stores/themeStore.js')['themeStore']
  const timerStore: typeof import('./src/stores/timerStore.js')['timerStore']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const typingStore: typeof import('./src/stores/typingStore.js')['typingStore']
  const unref: typeof import('vue')['unref']
  const updateDB: typeof import('./src/composables/updateDB.js')['updateDB']
  const updateSingleDoc: typeof import('./src/composables/firestoreDocs.js')['updateSingleDoc']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuth: typeof import('./src/composables/useAuth.js')['useAuth']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useEventLIstener: typeof import('./src/composables/useEventLIstener.js')['default']
  const useEventListener: typeof import('./src/composables/useEventListener.js')['default']
  const useId: typeof import('vue')['useId']
  const useLink: typeof import('vue-router')['useLink']
  const useModel: typeof import('vue')['useModel']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useWatchers: typeof import('./src/composables/useWatchers.js')['default']
  const userDataStore: typeof import('./src/stores/userDataStore.js')['userDataStore']
  const validateTestLines: typeof import('./src/composables/validateTestLines.js')['validateTestLines']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, Slot, Slots, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, ShallowRef, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
